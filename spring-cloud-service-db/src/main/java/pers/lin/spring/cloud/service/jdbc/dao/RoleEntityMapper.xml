<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pers.lin.spring.cloud.service.jdbc.dao.RoleEntityMapper" >
  <resultMap id="BaseResultMap" type="pers.lin.spring.cloud.service.jdbc.entity.RoleEntity" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="rolename" property="rolename" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="modifytime" property="modifytime" jdbcType="TIMESTAMP" />
    <result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="isdeleted" property="isdeleted" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, rolename, remarks, modifytime, addtime, isdeleted
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="pers.lin.spring.cloud.service.jdbc.entity.RoleEntity" >
    insert into role (id, rolename, remarks, 
      modifytime, addtime, isdeleted
      )
    values (#{id,jdbcType=BIGINT}, #{rolename,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, 
      #{modifytime,jdbcType=TIMESTAMP}, #{addtime,jdbcType=TIMESTAMP}, #{isdeleted,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="pers.lin.spring.cloud.service.jdbc.entity.RoleEntity" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="rolename != null" >
        rolename,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="modifytime != null" >
        modifytime,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
      <if test="isdeleted != null" >
        isdeleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="modifytime != null" >
        #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdeleted != null" >
        #{isdeleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pers.lin.spring.cloud.service.jdbc.entity.RoleEntity" >
    update role
    <set >
      <if test="rolename != null" >
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="modifytime != null" >
        modifytime = #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdeleted != null" >
        isdeleted = #{isdeleted,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="pers.lin.spring.cloud.service.jdbc.entity.RoleEntity" >
    update role
    set rolename = #{rolename,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      modifytime = #{modifytime,jdbcType=TIMESTAMP},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      isdeleted = #{isdeleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>