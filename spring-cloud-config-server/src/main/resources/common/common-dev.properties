common.value=common-dev


management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
spring.security.user.name=max
spring.security.user.password=max
# 打开登录校验 - 服务发现方式
# Eureka中的metadataMap是专门用来存放一些自定义的数据，
# 当注册中心或者其他服务需要此服务的某些配置时可以在metadataMap里取。
# 实际上，每个instance都有各自的metadataMap，map中存放着需要用到的属性。
# 例如，配置中的eureka.instance.metadata-map.user.name，当这个服务成功注册到Eureka上，
# SpringBootAdmin就会取拿到这个instance，进而拿到metadataMap里的属性，
# 然后放入请求头，向此服务发送请求，访问此服务的actuator开放的端点。
eureka.instance.metadata-map.user.name=${spring.security.user.name}
eureka.instance.metadata-map.user.password=${spring.security.user.password}
# 打开登录校验 - 服务发现方式
# 打开登录校验 - 指定服务端方式
spring.boot.admin.client.username=${spring.security.user.name}
spring.boot.admin.client.password=${spring.security.user.password}
spring.boot.admin.client.instance.metadata.user.name=${spring.security.user.name}
spring.boot.admin.client.instance.metadata.user.password=${spring.security.user.password}
# 打开登录校验 - 指定服务端方式

